# yamllint disable
# License: MIT (c) GitLab Inc.
# yamllint enable
---
rules:
- id: "python/crypto/rule-crypto_encrypt_dsa_rsa"
  languages:
  - "python"
  message: |
    Detected an insufficient key size for DSA. NIST recommends a key size
    of 2048 or higher.
  metadata:
    cwe: "CWE-326"
    owasp: "A3:2017-Sensitive Data Exposure"
    shortDescription: "Inadequate Encryption Strength"
  patterns:
  - pattern-either:
    - pattern: |
        cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key(...,key_size=$SIZE,...)
    - pattern: |
        cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key($EXP, $SIZE,...)
    - pattern: |
        cryptography.hazmat.primitives.asymmetric.rsa.generate_private_key($SIZE, ...)
    - pattern: |
        cryptography.hazmat.primitives.asymmetric.dsa.generate_private_key(...,key_size=$SIZE,...)
    - pattern: |
        cryptography.hazmat.primitives.asymmetric.dsa.generate_private_key($EXP, $SIZE, ...)
    - pattern: "cryptography.hazmat.primitives.asymmetric.dsa.generate_private_key($SIZE,...)"
    - pattern: "Crypto.PublicKey.RSA.generate($SIZE, ...)"
    - pattern: "Crypto.PublicKey.DSA.generate($SIZE, ...)"
    - pattern: "Cryptodome.PublicKey.DSA.generate($SIZE, ...)"
    - pattern: "Cryptodome.PublicKey.RSA.generate($SIZE, ...)"
    - pattern: "Crypto.PublicKey.DSA.generate(bits=$SIZE, ...)"
    - pattern: "Cryptodome.PublicKey.DSA.generate(bits=$SIZE, ...)"
    - pattern: "pycrypto_rsa.generate(bits=$SIZE, ...)"
    - pattern: "pycrypto_dsa.generate(bits=$SIZE, ...)"
    - pattern: "pycryptodomex_rsa.generate(bits=$SIZE, ...)"
    - pattern: "pycryptodomex_rsa.generate($SIZE, ...)"
    - pattern: "pycryptodomex_dsa.generate(bits=$SIZE, ...)"
    - pattern: "pycryptodomex_dsa.generate($SIZE, ...)"
  - metavariable-comparison:
      comparison: "$SIZE < 2048"
      metavariable: "$SIZE"
  severity: "ERROR"
