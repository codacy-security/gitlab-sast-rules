# yamllint disable
# source (modified): https://github.com/returntocorp/semgrep-rules/blob/develop/python/lang/security/audit/dangerous-system-call.yaml
# dangerous-system-call
# yamllint enable
---
rules:
- id: "python/exec/rule-subprocess_call"
  patterns:
  - pattern-not: "subprocess.$FUNC(..., shell=True)"
  - pattern-either:
    - pattern: "subprocess.$FUNC([...], ...)"
    - pattern: "subprocess.$FUNC(...)"
    - pattern: "subprocess.$FUNC([...], shell=False)"
    - pattern: "subprocess.$FUNC(..., shell=False)"
    - pattern: "subprocess.$FUNC([...], shell=0)"
    - pattern: "subprocess.$FUNC(..., shell=0)"
    - pattern: "subprocess.$FUNC([...], shell=[])"
    - pattern: "subprocess.$FUNC(..., shell=[])"
    - pattern: "subprocess.$FUNC([...], shell={})"
    - pattern: "subprocess.$FUNC(..., shell={})"
    - pattern: "subprocess.$FUNC([...], shell=None)"
    - pattern: "subprocess.$FUNC(..., shell=None)"
    - pattern: "subprocess.$FUNC(..., shell=None)"
  message: |
    subprocess call - check for execution of untrusted input
  metadata:
    cwe: "CWE-78: Improper Neutralization of Special Elements used in an OS Command
      ('OS Command Injection')"
    owasp: "A1: Injection"
  severity: "WARNING"
  languages:
  - "python"
