# yamllint disable
# License: MIT (c) GitLab Inc.
# source (original): https://github.com/ajinabraham/njsscan/blob/master/njsscan/rules/semantic_grep/headers/header_injection.yaml
# hash: e7a0a61
# yamllint enable
---
rules:
- id: "javascript/headers/rule-generic_header_injection"
  patterns:
  - pattern-either:
    - pattern-inside: function ($REQ, $RES, ...) {...}
    - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: "$X = function $FUNC($REQ, $RES, ...) {...}"
    - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
    - pattern-inside: "$APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})"
  - pattern-either:
    - pattern: |
        $INP = $REQ.$QUERY;
        ...
        $RES.set(..., <... $INP ...>, ...)
    - pattern: |
        $INP = $REQ.$QUERY.$VAR;
        ...
        $RES.set(..., <... $INP ...>, ...)
    - pattern: |
        $INP = $REQ.$VAR;
        ...
        $RES.set(..., { $X: <... $INP ...>}, ...)
    - pattern: |
        $INP = $REQ.$QUERY.$FOO;
        ...
        $RES.set(..., { $X: <... $INP ...>}, ...)
    - pattern: |
        $INP = $REQ.$VAR;
        ...
        $RES.writeHead(..., { $X: <... $INP ...> }, ...)
    - pattern: |
        $INP = $REQ.$QUERY.$FOO;
        ...
        $RES.writeHead(..., { $X: <... $INP ...> }, ...)
    - pattern: "$RES.set(..., <... $REQ.$QUERY ...>, ...)\n"
    - pattern: "$RES.set(..., <... $REQ.$QUERY.$VAR ...>, ...)\n"
    - pattern: "$RES.set(..., { $X: <... $REQ.$VAR ...>}, ...)\n"
    - pattern: "$RES.set(..., { $X: <... $REQ.$QUERY.$FOO ...>}, ...)\n"
    - pattern: "$RES.writeHead(..., { $X: <... $REQ.$VAR ...> }, ...)\n"
    - pattern: "$RES.writeHead(..., { $X: <... $REQ.$QUERY.$FOO ...> }, ...)\n"
  message: |
    Untrusted user input in response header will result in HTTP Header Injection or Response Splitting Attacks.
  languages:
  - "javascript"
  severity: "ERROR"
  metadata:
    owasp: "A1:2017-Injection"
    cwe: "CWE-644: Improper Neutralization of HTTP Headers for Scripting Syntax"
