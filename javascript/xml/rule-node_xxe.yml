# yamllint disable
# License: MIT (c) GitLab Inc.
# source (original): https://github.com/ajinabraham/njsscan/blob/master/njsscan/rules/semantic_grep/xml/xxe_node.yaml
# hash: e7a0a61
# yamllint enable
---
rules:
- id: "javascript/xml/rule-node_xxe"
  patterns:
  - pattern-either:
    - pattern-inside: function ($REQ, $RES, ...) {...}
    - pattern-inside: function $FUNC($REQ, $RES, ...) {...}
    - pattern-inside: "$X = function $FUNC($REQ, $RES, ...) {...}"
    - pattern-inside: var $X = function $FUNC($REQ, $RES, ...) {...};
    - pattern-inside: "$APP.$METHOD(..., function $FUNC($REQ, $RES, ...) {...})"
  - pattern-either:
    - pattern: "$LIBXML.parseXmlString(..., <... $REQ.$QUERY.$VAR.$FILE ...>, ...)\n"
    - pattern: "$LIBXML.parseXmlString(..., <... $REQ.$QUERY.$VAR ...>, ...)\n"
    - pattern: "$LIBXML.parseXmlString(..., <... $REQ.$QUERY ...>, ...)\n"
    - pattern: "$FOO = <... $REQ.$QUERY.$VAR.$FILE ...>; ... $LIBXML.parseXmlString(..., <... $FOO ...>, ...)\n"
    - pattern: "$FOO = <... $REQ.$QUERY.$VAR ...>; ... $LIBXML.parseXmlString(..., <... $FOO ...>, ...)\n"
    - pattern: "$FOO = <... $REQ.$QUERY ...>; ... $LIBXML.parseXmlString(..., <... $FOO ...>, ...)\n"
    - pattern: "$LIBXML.parseXml(..., <... $REQ.$QUERY.$VAR.$FILE ...>, ...)\n"
    - pattern: "$LIBXML.parseXml(..., <... $REQ.$QUERY.$VAR ...>, ...)\n"
    - pattern: "$LIBXML.parseXml(..., <... $REQ.$QUERY ...>, ...)\n"
    - pattern: "$FOO = <... $REQ.$QUERY.$VAR.$FILE ...>; ... $LIBXML.parseXml(..., <... $FOO ...>, ...)\n"
    - pattern: "$FOO = <... $REQ.$QUERY.$VAR ...>; ... $LIBXML.parseXml(..., <... $FOO ...>, ...)\n"
    - pattern: |
        $FOO = <... $REQ.$QUERY ...>;
        ...
        $LIBXML.parseXml(..., <... $FOO ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxParser()
        ...
        $PARSER.parseString(..., <... $REQ.$QUERY ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxParser()
        ...
        $PARSER.parseString(..., <... $REQ.$QUERY.$BAR ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxParser()
        ...
        $PARSER.parseString(..., <... $REQ.$QUERY.$BAR.$FILE ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxPushParser()
        ...
        $PARSER.push(..., <... $REQ.$QUERY ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxPushParser()
        ...
        $PARSER.push(..., <... $REQ.$QUERY.$FOO ...> , ...)
    - pattern: |
        $PARSER = new libxmljs.SaxPushParser()
        ...
        $PARSER.push(..., <... $REQ.$QUERY.$FOO.$FILE ...> , ...)
    - pattern: |
        $PARSER = new libxmljs.SaxParser()
        ...
        $FOO = <... $REQ.$QUERY ...>;
        ...
        $PARSER.parseString(..., <... $FOO ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxParser()
        ...
        $FOO = <... $REQ.$QUERY.$BAR ...>;
        ...
        $PARSER.parseString(..., <... $FOO ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxParser()
        ...
        $FOO = <... $REQ.$QUERY.$BAR.$FILE ...>;
        ...
        $PARSER.parseString(..., <... $FOO ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxPushParser()
        ...
        $FOO = <... $REQ.$QUERY ...>;
        ...
        $PARSER.push(..., <... $FOO ...>, ...)
    - pattern: |
        $PARSER = new libxmljs.SaxPushParser()
        ...
        $FOO = <... $REQ.$QUERY.$BAR ...>;
        ...
        $PARSER.push(..., <... $FOO ...> , ...)
    - pattern: |
        $PARSER = new libxmljs.SaxPushParser()
        ...
        $FOO = <... $REQ.$QUERY.$BAR.$FILE ...>;
        ...
        $PARSER.push(..., <... $FOO ...> , ...)
  message: |
    User controlled data in XML parsers can result in XML External or Internal Entity (XXE) Processing vulnerabilities
  languages:
  - "javascript"
  severity: "ERROR"
  metadata:
    owasp: "A4:2017-XML External Entities (XXE)"
    cwe: "CWE-611: Information Leak Through XML External Entity File Disclosure"
