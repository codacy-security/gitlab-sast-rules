# yamllint disable
# License: MIT (c) GitLab Inc.
# yamllint enable
---
rules:
  - id: "javascript_react_rule-missing-noopener"
    languages:
      - "typescript"
      - "javascript"
    message: |
      Missing 'noopener' on an anchor tag where target='_blank'. This could introduce
      a reverse tabnabbing vulnerability. Include 'noopener' when using target='_blank'.
    metadata:
      cwe: "CWE-200"
      owasp: "A3:2017-Sensitive Data Exposure"
      references:
        - "https://html.spec.whatwg.org/multipage/links.html#link-type-noreferrer"
        - "https://web.dev/external-anchors-use-rel-noopener/"
        - "https://owasp.org/www-community/attacks/Reverse_Tabnabbing"
      shortDescription: "Exposure of Sensitive Information to an Unauthorized Actor"
      license: MIT
    pattern-either:
      - patterns:
          - pattern: |
              <$X target="_blank" />
          - pattern-not: |
              <$X target="_blank" rel="..." />
      - patterns:
          - pattern-inside: |
              <$X target="_blank" rel=... />
          - pattern-regex: "rel=[\"']((?!noopener).)*?[\"']"
      - patterns:
          - pattern: |
              React.createElement($A, {target: '_blank'},...)
          - pattern-not: |
              React.createElement($A, {rel: '...'},...)
      - patterns:
          - pattern: |
              React.createElement($A, {target: '_blank', rel: $REL},...)
          - metavariable-regex:
              metavariable: "$REL"
              regex: "[\"']((?!noopener).)*?['\"]"
      - patterns:
          - pattern: |
              $P = {target: '_blank'};
              ...
              React.createElement($A, $P,...);
          - pattern-not: |
              $P = {rel: '...'};
              ...
              React.createElement($A, $P,...);
      - patterns:
          - pattern: |
              $P = {target: '_blank', rel: $REL};
              ...
              React.createElement($A, $P,...);
          - metavariable-regex:
              metavariable: "$REL"
              regex: "[\"']((?!noopener).)*?['\"]"
    severity: "WARNING"
