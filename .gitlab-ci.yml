stages:
  - test
  - gapanalysis

# make sure the rules adhere to our quality guidelines
yamllint-quality:
  image: python:2.7
  stage: test 
  before_script:
    - pip install yamllint
  script:
    - yamllint .

rulecheck-quality:
  stage: test 
  image: ruby:3-alpine
  before_script:
    - apk add --no-cache yaml-dev alpine-sdk
    - gem install psych yaml fileutils json-schema
  script:
    - ./ci/schema.rb .
    - ./ci/quality.rb

# make sure that every rule has an associated test-case
rulecheck-availability:
  stage: test 
  image: ruby:3-alpine
  before_script:
    - apk add --no-cache yaml-dev alpine-sdk
    - gem install psych yaml fileutils
  script:
    - ./ci/availability.rb

semgrep-validity-check:
  image: python:3
  stage: test 
  before_script:
    - pip install semgrep
  script:
    - ci/semgrep_validity_check.sh

gapanalysis:
  stage: gapanalysis
  variables:
    UPSTREAM_BRANCH: $CI_COMMIT_REF_NAME
  trigger:
    project: gitlab-org/secure/gsoc-sast-vulnerability-rules/rule-testing-framework/rule-testing
