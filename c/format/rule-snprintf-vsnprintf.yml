# yamllint disable
# The ruleset is generated from flawfinder official rule repository hosted on github.
# License: MIT (c) GitLab Inc.
# source: https://github.com/david-a-wheeler/flawfinder/blob/e0d8827c3b714a883ce8036edc832721f4619524/flawfinder.py
# yamllint enable
---
rules:
  - id: "c_format_rule-snprintf-vsnprintf"
    languages:
      - "c"
    message: |
      Format string vulnerabilities allow an attacker to read or in some cases, potentially write
      data to
      and from locations in the processes' memory. To prevent against format string attacks, do not
      allow
      users or un-validated input to provide the format specification.
      Consider using a constant for the format specification, or strip all format
      specifiers from the input prior to calling the `snprintf` family of functions.

      Note that some variations of this function do not always null terminate the strings.

      For more information on using snprintf please see: https://linux.die.net/man/3/snprintf

      For more information on format string attacks please see OWASP's attack guide:
      https://owasp.org/www-community/attacks/Format_string_attack
    metadata:
      shortDescription: "Potential format string vulnerability"
      cwe: "CWE-134"
      owasp: "A1:2017-Injection"
      license: MIT
    pattern-either:
      - patterns:
          - pattern: "snprintf($BUF,$SIZ,$FMT,...)"
          - pattern-not: "snprintf($BUF,$SIZ,\"...\",...)"
      - patterns:
          - pattern: "vsnprintf($BUF,$SIZ,$FMT)"
          - pattern-not: "vsnprintf($BUF,$SIZ,\"...\",...)"
      - patterns:
          - pattern: "_snprintf($BUF,$SIZ,$FMT,...)"
          - pattern-not: "_snprintf($BUF,$SIZ,$FMT,\"...\",...)"
      - patterns:
          - pattern: "_sntprintf($VAR,$FMT,...)"
          - pattern-not: "sntprintf($VAR,\"...\",...)"
      - patterns:
          - pattern: "_vsntprintf($VAR,$FMT,...)"
          - pattern-not: "_vsntprintf($VAR,\"...\",...)"
    severity: "ERROR"
