# yamllint disable
# The ruleset is generated from flawfinder official rule repository hosted on github.
# License: GPL 2.0 (c) 1989, 1991 Free Software Foundation, Inc.
# source: https://github.com/david-a-wheeler/flawfinder/blob/e0d8827c3b714a883ce8036edc832721f4619524/flawfinder.py
# yamllint enable
---
rules:
- id: "c/buffer/rule-scanf_vscanf"
  languages:
  - "c"
  message: "Format specifiers can take optional field widths, which should be\nused
    to limit how many characters are copied into the target buffer.\n\nExample:\n```\n
    \ char buf[11] = {0};\n  scanf(\"%10s\", &buf); // buf = AAAAAAAAAA\\0\n```\n\nIf
    developing for C Runtime Library (CRT), more secure versions of these functions
    should be\nused, see: \nhttps://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/scanf-s-scanf-s-l-wscanf-s-ws\ncanf-s-l?view=msvc-170\n"
  metadata:
    shortDescription: "scanf() functions may allow format string based overflows"
    cwe: "CWE-120"
  pattern-either:
  - patterns:
    - pattern: "scanf($FMT, ...)"
    - pattern-not: "scanf(\"...\", ...)"
  - patterns:
    - pattern: "vscanf($FMT, ...)"
    - pattern-not: "vscanf(\"...\", ...)"
  - patterns:
    - pattern: "wscanf($FMT, ...)"
    - pattern-not: "wscanf(\"...\", ...)"
  - patterns:
    - pattern: "_tscanf($FMT, ...)"
    - pattern-not: "_tscanf(\"...\", ...)"
  - patterns:
    - pattern: "vwscanf(FMT, ...)"
    - pattern-not: "vwscanf(\"...\", ...)"
  severity: "ERROR"
